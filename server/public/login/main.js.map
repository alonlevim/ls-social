{"version":3,"sources":["./src/config/config.service.ts","./src/authentication/authentication.service.ts","./src/app/login-registration/login-registration.component.ts","./src/app/login-registration/login-registration.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/authentication/token.service.ts","./src/app/app.module.ts","./src/authentication/user.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { environment } from './../environments/environment';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { User } from '../authentication/user';\nimport { TokenService } from '../authentication/token.service';\nimport { NewToken } from './../authentication/newToken';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n  private configUrl = environment.production ? '/' : \"http://localhost:8081/\";\n\n  constructor(private http: HttpClient, private token: TokenService) {\n\n  }\n\n  // Login / Registration\n  postLogin(user: User) {\n    const loginApi = 'login';\n\n    return this.http.post<NewToken>(this.configUrl + loginApi, { ...user });\n  }\n\n  postRegistration(user: User) {\n    const addUserApi = 'add-user';\n\n    return this.http.post<NewToken>(this.configUrl + addUserApi, { ...user });\n  }\n}\n","import { Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { User } from './user';\nimport { NewToken } from './newToken';\nimport { ConfigService } from './../config/config.service';\nimport { TokenService } from './token.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  constructor(private token: TokenService, private router: Router, private server: ConfigService) { }\n\n  checkAuth(path: string) {\n    if (this.token.existsToken()) {\n      \n    }\n  }\n\n  login(user: User, catchError: Function) {\n    this.server.postLogin(user).subscribe({\n      next: data => this.loginSucceeded(data),\n      error: error => catchError()\n    });\n  }\n\n  registration(user: User, catchError: Function) {\n    this.server.postRegistration(user).subscribe({\n      next: data => this.loginSucceeded(data),\n      error: error => catchError()\n    });\n  }\n\n  logout() {\n    this.token.removeToken();\n    window.location.reload();\n  }\n\n  private loginSucceeded(data: NewToken) {\n    if (data.status === \"ok\") {\n      // Set token in local-storage\n      // this.token.setToken(data.token);\n      // refresh page\n      document.location.replace(\"/\");\n      // window.location.reload();\n    }\n  }\n}\n","import { User } from './../../authentication/user';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from 'src/authentication/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-login-registration',\r\n  templateUrl: './login-registration.component.html',\r\n  styleUrls: ['./login-registration.component.scss']\r\n})\r\nexport class LoginRegistrationComponent implements OnInit {\r\n  model = new User();\r\n  typeMethod = 'sign-up';\r\n  errorRequest = false;\r\n  messageError: string;\r\n  loading: boolean = false;\r\n\r\n  constructor(private auth: AuthenticationService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit(user: User) {\r\n    this.errorRequest = false;\r\n    this.loading = true;\r\n\r\n    if (this.typeMethod === \"sign-up\") {\r\n      this.auth.registration(user,\r\n        () => {\r\n          // Error while sent request\r\n          this.loading = false;\r\n          this.errorRequest = true;\r\n          this.messageError = \"Can't sign up right now, try in few minutes again.\";\r\n        });\r\n    }\r\n    else if (this.typeMethod === \"sign-in\") {\r\n      this.auth.login(user, () => {\r\n          // Error while sent request\r\n          this.loading = false;\r\n          this.errorRequest = true;\r\n          this.messageError = \"Your account or password is incorrect.\";\r\n      });\r\n    }\r\n  }\r\n\r\n  changeTypeMethod() {\r\n    this.typeMethod = this.typeMethod === 'sign-up' ? 'sign-in' : 'sign-up';\r\n  }\r\n}\r\n\r\n\r\n","<section>\r\n  <div class=\"content\">\r\n    <div class=\"logo\">\r\n      <img class=\"logo\" src=\"./assets/logo.svg\" />\r\n    </div>\r\n    <form #userForm=\"ngForm\" (ngSubmit)=\"userForm.form.valid && onSubmit(userForm.value)\"\r\n      class=\"form-login\">\r\n\r\n      <div *ngIf=\"errorRequest\">\r\n        <p class=\"error-message\">{{this.messageError}}</p>\r\n      </div>\r\n\r\n      <div class=\"name-group group\" *ngIf=\"typeMethod == 'sign-up'\">\r\n        <div class=\"invalid-feedback\" *ngIf=\"userForm.submitted && name.invalid\">\r\n          <p *ngIf=\"name.errors?.required\" class=\"error-message\">Name is required</p>\r\n          <div *ngIf=\"name.errors?.minlength\" class=\"error-message\">Name should be at least 2 characters long</div>\r\n        </div>\r\n        <input type=\"text\" name=\"name\" placeholder=\"Full Name\" [(ngModel)]=\"model.name\" required #name=\"ngModel\"\r\n          minlength=\"2\" [disabled]=\"loading\" />\r\n      </div>\r\n\r\n      <div class=\"name-group group\">\r\n        <div class=\"invalid-feedback\" *ngIf=\"userForm.submitted && email.invalid\">\r\n          <p *ngIf=\"email.errors?.required\" class=\"error-message\">Email is required</p>\r\n          <div *ngIf=\"email.errors.email || email.errors.pattern\" class=\"error-message\">Must be a valid email address\r\n          </div>\r\n        </div>\r\n        <input type=\"email\" name=\"email\" placeholder=\"Email\" [(ngModel)]=\"model.email\" email required #email=\"ngModel\"\r\n          pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" [disabled]=\"loading\" />\r\n      </div>\r\n\r\n      <div class=\"name-group group\">\r\n        <div *ngIf=\"userForm.submitted && password.invalid\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"password.errors?.required\" class=\"error-message\">Password is required</div>\r\n          <div *ngIf=\"password.errors?.minlength\" class=\"error-message\">Password should be at least 6 characters long\r\n          </div>\r\n        </div>\r\n        <input type=\"password\" name=\"password\" placeholder=\"Password\" [(ngModel)]=\"model.password\" #password=\"ngModel\"\r\n          minlength=\"6\" required [disabled]=\"loading\" />\r\n      </div>\r\n\r\n      <button [disabled]=\"loading\">{{ loading ? 'Connecting...' : typeMethod === 'sign-up' ? 'Sign up' : 'Login' }}</button>\r\n    </form>\r\n  </div>\r\n  <p class=\"change-method-login\"><a (click)=\"changeTypeMethod()\">{{typeMethod == 'sign-up' ? 'Sign In' : 'Sign Up'}}</a>\r\n  </p>\r\n</section>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ls-social';\n}\n","<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n  private tokenKey = \"token\";\n\n  constructor() { }\n\n  existsToken() {\n    return localStorage.getItem(this.tokenKey) != null;\n  }\n\n  getToken() {\n    return 'bearer ' + localStorage.getItem(this.tokenKey);\n  }\n\n  setToken(token) {\n    return localStorage.setItem(this.tokenKey, token);\n  }\n\n  removeToken() {\n    localStorage.removeItem(this.tokenKey);\n  }\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NavigationEnd, Router, RouterModule } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginRegistrationComponent } from './login-registration/login-registration.component';\r\n\r\nimport { AuthenticationService } from '../authentication/authentication.service';\r\n\r\n@NgModule({\r\n  declarations: [\t\t\t\t\r\n    AppComponent,\r\n      LoginRegistrationComponent,\r\n   ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    InfiniteScrollModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: LoginRegistrationComponent },\r\n    ])\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { \r\n  constructor(private router: Router, private authentication: AuthenticationService) {\r\n    router.events.subscribe((val) => {\r\n      if( val instanceof NavigationEnd ){\r\n        this.authentication.checkAuth(val.url);\r\n      }\r\n  });\r\n  }\r\n}\r\n","export class User {\r\n    public name: string;\r\n    public email: string;\r\n    public password: string;\r\n  }","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}